# The testing matrix considers ruby/puppet versions supported by SIMP and PE:
#
# https://puppet.com/docs/pe/2021.1/component_versions_in_recent_pe_releases.html
# https://puppet.com/misc/puppet-enterprise-lifecycle
# https://puppet.com/docs/pe/2018.1/overview/getting_support_for_pe.html
# ------------------------------------------------------------------------------
# Release         Puppet   Ruby    EOL
# SIMP 6.5        6.18     2.5.8
# PE 2019.8.6     6.22.1   2.5.9   2022-12 (LTS)
---

stages:
  - 'validation'
  - 'acceptance'
  - 'compliance'
  - 'deployment'

variables:
  PUPPET_VERSION:    'UNDEFINED' # <- Matrixed jobs MUST override this (or fail)
  BUNDLER_VERSION:   '1.17.1'

  # Force dependencies into a path the gitlab-runner user can write to.
  # (This avoids some failures on Runners with misconfigured ruby environments.)
  GEM_HOME:          .vendor/gem_install
  BUNDLE_CACHE_PATH: .vendor/bundle
  BUNDLE_PATH:       .vendor/bundle
  BUNDLE_BIN:        .vendor/gem_install/bin
  BUNDLE_NO_PRUNE:   'true'

  SIMP_SKIP_NON_SIMPOS_TESTS: 1


# bundler dependencies and caching
#
# - Cache bundler gems between pipelines foreach Ruby version
# - Try to use cached and local resources before downloading dependencies
# --------------------------------------
.setup_bundler_env: &setup_bundler_env
  cache:
    untracked: true
    key: "${CI_PROJECT_NAMESPACE}_ruby-${MATRIX_RUBY_VERSION}_bundler"
    paths:
      - '.vendor'
  before_script:
    - 'ruby -e "puts %(\n\n), %q(=)*80, %(\nSIMP-relevant Environment Variables:\n\n#{e=ENV.keys.grep(/^PUPPET|^SIMP|^BEAKER|MATRIX/); pad=e.map{|x| x.size}.max+1; e.map{|v| %(    * #{%(#{v}:).ljust(pad)} #{39.chr + ENV[v] + 39.chr}\n)}.join}\n),  %q(=)*80, %(\n\n)"'
    # Diagnostic ruby & gem information
    - 'which ruby && ruby --version || :'
    - "[[ $- == *i* ]] && echo 'Interactive shell session' || echo 'Non-interactive shell session'"
    - "shopt -q login_shell && echo 'Login shell' || echo 'Not a login shell'"
    - 'rvm ls || :'

    # If RVM is available, make SURE it's using the right Ruby:
    #   * Source rvm (to run in non-login shells)
    #   * If any $MATRIX_RUBY_VERSION rubies are available, use the latest
    #   * Otherwise: install & use ${MATRIX_RUBY_VERSION}-head (e.g., latest)
    #     * ^^ This could be wonky and introduce variations across runners
    #     * ^^ maybe it should just fail if there is no $MATRIX_RUBY_VERSION installed?
    - "command -v rvm && { if declare -p rvm_path &> /dev/null; then source \"${rvm_path}/scripts/rvm\"; else source \"$HOME/.rvm/scripts/rvm\" || source /etc/profile.d/rvm.sh; fi; }"
    - "command -v rvm && { LATEST_RVM_RUBY_XY=\"$(rvm ls | grep \"$MATRIX_RUBY_VERSION\" | tail -1 | sed -e 's/^.*\\([0-9]\\+\\.[0-9]\\+\\.[0-9]\\+\\).*$/\\1/g')\"; if [ -z \"$LATEST_RVM_RUBY_XY\" ]; then LATEST_RVM_RUBY_XY=\"${MATRIX_RUBY_VERSION}-head\"; rvm install \"$LATEST_RVM_RUBY\" --no-docs; else echo \"Found RVM Ruby: '${LATEST_RVM_RUBY_XY}'\"; fi; rvm use \"$LATEST_RVM_RUBY_XY\" ;  }"
    - 'ruby --version || :'
    - 'gem list sync || :'

    # Bundle gems (preferring cached > local > downloaded resources)
    #   * Try to use cached and local resources before downloading dependencies
    - 'declare GEM_BUNDLER_VER=(-v "~> ${BUNDLER_VERSION:-1.17.1}")'
    - 'declare GEM_INSTALL_CMD=(gem install --no-document)'
    - 'declare BUNDLER_INSTALL_CMD=(bundle install --no-binstubs --jobs $(nproc) "${FLAGS[@]}")'
    - 'mkdir -p ${GEM_HOME} ${BUNDLER_BIN}'
    - 'gem list -ie "${GEM_BUNDLER_VER[@]}" --silent bundler || "${GEM_INSTALL_CMD[@]}" --local "${GEM_BUNDLER_VER[@]}" bundler || "${GEM_INSTALL_CMD[@]}" "${GEM_BUNDLER_VER[@]}" bundler'
    - 'rm -rf pkg/ || :'
    - 'bundle check || rm -f Gemfile.lock && ("${BUNDLER_INSTALL_CMD[@]}" --local || "${BUNDLER_INSTALL_CMD[@]}" || bundle pristine ||  "${BUNDLER_INSTALL_CMD[@]}") || { echo "PIPELINE: Bundler could not install everything (see log output above)" && exit 99 ; }'

    # Diagnostic bundler, ruby, and gem checks:
    - 'bundle exec rvm ls || :'
    - 'bundle exec which ruby || :'
    - 'bundle show sync || :'
    - 'bundle exec gem list sync || :'


# Puppet Versions
#-----------------------------------------------------------------------

.pup_6_x: &pup_6_x
  image: 'ruby:2.5'
  variables:
    PUPPET_VERSION: '~> 6.0'
    BEAKER_PUPPET_COLLECTION: 'puppet6'
    MATRIX_RUBY_VERSION: '2.5'

.pup_6_pe: &pup_6_pe
  image: 'ruby:2.5'
  variables:
    PUPPET_VERSION: '6.22.1'
    BEAKER_PUPPET_COLLECTION: 'puppet6'
    MATRIX_RUBY_VERSION: '2.5'

.pup_7_x: &pup_7_x
  image: 'ruby:2.7'
  variables:
    PUPPET_VERSION: '~> 7.0'
    BEAKER_PUPPET_COLLECTION: 'puppet7'
    MATRIX_RUBY_VERSION: '2.7'

# Testing Environments
#-----------------------------------------------------------------------

.unit_tests: &unit_tests
  stage: 'validation'
  tags: ['docker']
  <<: *setup_bundler_env
  script:
    # simp cli code uses libpwquality or cracklib to validate passwords and
    # rsync in simp environment commands
    - 'if `hash apt-get`; then apt-get update; fi'
    - 'if `hash apt-get`; then apt-get install -y rpm cracklib-runtime openssl libicu-dev rsync; fi'
    # simp config uses grub2-mkpasswd-pbkdf2 when encrypting a GRUB password,
    # but the command has a different name on Ubuntu
    - 'if `hash apt-get`; then apt-get install -y grub-common; fi'
    - 'if `hash apt-get`; then ln -s /usr/bin/grub-mkpasswd-pbkdf2 /usr/bin/grub2-mkpasswd-pbkdf2 ; fi'
    # simp cli code fetches USER env variable.  In the docker container USER is
    # not available, but the process is running as root.
    - 'USER=root SIMP_SKIP_NON_SIMPOS_TESTS=1 bundle exec rake spec'

.acceptance_base: &acceptance_base
  stage: 'acceptance'
  tags: ['beaker']
  <<: *setup_bundler_env

# Pipeline / testing matrix
#=======================================================================

releng_checks:
  <<: *pup_6_x
  <<: *setup_bundler_env
  stage: 'validation'
  tags: ['docker']
  script:
    - 'command -v rpm || if command -v apt-get; then apt-get update; apt-get install -y rpm; fi ||:'
    - 'command -v rpm || { >&2 echo "FATAL: Cannot find executable: ''rpm''";  exit 1 ;}'
    - 'bundle exec rake pkg:check_version'
    - 'bundle exec rake pkg:compare_latest_tag'
    - 'bundle exec rake pkg:create_tag_changelog'
    - 'bundle exec rake pkg:gem'

# Unit Tests
#-----------------------------------------------------------------------
pup6.x-unit:
  <<: *pup_6_x
  <<: *unit_tests

pup6.pe-unit:
  <<: *pup_6_pe
  <<: *unit_tests

pup7.x-unit:
  <<: *pup_7_x
  <<: *unit_tests


# Test control variables
#=======================================================================
#

# To avoid running a prohibitive number of tests every commit,
# don't set this env var in your gitlab instance
.only_with_SIMP_FULL_MATRIX: &only_with_SIMP_FULL_MATRIX
  only:
    variables:
      - $SIMP_FULL_MATRIX


# Acceptance tests
# ==============================================================================
pup6.pe:
  <<: *pup_6_pe
  <<: *only_with_SIMP_FULL_MATRIX
  <<: *acceptance_base
  script:
    - 'bundle exec rake beaker:suites[default,default]'

pup6.pe_config:
  <<: *pup_6_pe
  <<: *only_with_SIMP_FULL_MATRIX
  <<: *acceptance_base
  script:
    - 'bundle exec rake beaker:suites[config,default]'

pup6.pe_simp_kv:
  <<: *pup_6_pe
  <<: *only_with_SIMP_FULL_MATRIX
  <<: *acceptance_base
  script:
    - 'bundle exec rake beaker:suites[simp_kv,default]'

pup6.x:
  <<: *pup_6_x
  <<: *acceptance_base
  script:
    - 'bundle exec rake beaker:suites[default,default]'

pup6.x-fips:
  <<: *pup_6_x
  <<: *only_with_SIMP_FULL_MATRIX
  <<: *acceptance_base
  script:
    - 'BEAKER_fips=yes bundle exec rake beaker:suites[default,default]'

pup6.x_centos8:
  <<: *pup_6_x
  <<: *acceptance_base
  script:
    - 'bundle exec rake beaker:suites[default,centos8]'

# puppetserver RPMs do not yet install on EL8 because the RPM digest
# algorithm used is MD5
pup6.x_centos8-fips:
  <<: *pup_6_x
  <<: *acceptance_base
  allow_failure: true
  script:
    - 'BEAKER_fips=yes bundle exec rake beaker:suites[default,centos8]'


pup6.x_config:
  <<: *pup_6_x
  <<: *only_with_SIMP_FULL_MATRIX
  <<: *acceptance_base
  script:
    - 'bundle exec rake beaker:suites[config,default]'

pup6.x_config_centos8:
  <<: *pup_6_x
  <<: *acceptance_base
  script:
    - 'bundle exec rake beaker:suites[config,centos8]'

# puppetserver RPMs do not yet install on EL8 because the RPM digest
# algorithm used is MD5
pup6.x_config_centos8-fips:
  <<: *pup_6_x
  <<: *only_with_SIMP_FULL_MATRIX
  <<: *acceptance_base
  allow_failure: true
  script:
    - 'BEAKER_fips=yes bundle exec rake beaker:suites[config,centos8]'

pup6.x_simp_kv:
  <<: *pup_6_x
  <<: *only_with_SIMP_FULL_MATRIX
  <<: *acceptance_base
  script:
    - 'bundle exec rake beaker:suites[simp_kv,default]'

pup6.x_simp_kv-fips:
  <<: *pup_6_x
  <<: *only_with_SIMP_FULL_MATRIX
  <<: *acceptance_base
  script:
    - 'BEAKER_fips=yes bundle exec rake beaker:suites[simp_kv,default]'

pup6.x_simp_kv_centos8:
  <<: *pup_6_x
  <<: *acceptance_base
  script:
    - 'bundle exec rake beaker:suites[simp_kv,centos8]'

# SIMP-10025 URL to check if puppetserver is up does not exist in Puppet 7
#pup7.x_centos8:
#  <<: *pup_7_x
#  <<: *acceptance_base
#  script:
#    - 'bundle exec rake beaker:suites[default,centos8]'

pup7.x_config_centos8:
  <<: *pup_7_x
  <<: *acceptance_base
  script:
    - 'bundle exec rake beaker:suites[config,centos8]'

# SIMP-10025 URL to check if puppetserver is up does not exist in Puppet 7
#pup7.x_simp_kv_centos8:
#  <<: *pup_7_x
#  <<: *acceptance_base
#  script:
#    - 'bundle exec rake beaker:suites[simp_kv,centos8]'

